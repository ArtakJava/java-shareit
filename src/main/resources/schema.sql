create table if not exists public.users (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(255) NOT NULL,
    email varchar(512) NOT NULL,
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

create table if not exists public.items (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(255) NOT NULL,
    user_id bigint NOT NULL,
    description varchar(1000),
    available boolean NOT NULL,
    CONSTRAINT fk_items_to_users FOREIGN KEY(user_id) REFERENCES users(id)
);

create table if not exists public.bookings (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    end_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    item_id bigint NOT NULL,
    booker_id bigint NOT NULL,
    status varchar(16) NOT NULL,
    CONSTRAINT fk_bookings_to_items FOREIGN KEY(item_id) REFERENCES items(id),
    CONSTRAINT fk_bookings_to_users FOREIGN KEY(booker_id) REFERENCES users(id)
);

create table if not exists public.requests (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description varchar(1000),
    requestor_id bigint NOT NULL,
    CONSTRAINT fk_requests_to_users FOREIGN KEY(requestor_id) REFERENCES users(id)
);

create table if not exists public.comments (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text varchar(1000),
    item_id bigint NOT NULL,
    author_id bigint NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT fk_comments_to_items FOREIGN KEY(item_id) REFERENCES items(id),
    CONSTRAINT fk_comments_to_users FOREIGN KEY(author_id) REFERENCES users(id)
);